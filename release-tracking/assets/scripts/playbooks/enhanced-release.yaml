---
- hosts: localhost
  connection: local
  gather_facts: false

  vars_prompt:

    - name: dt_tenant
      prompt: What is your DT environment (no trailing slash eg. https://abc12345.live.dynatrace.com)?
      private: false

    - name: dt_api_token
      prompt: What is your DT API Token?
      private: false

    - name: deployment_version
      prompt: What is the deployment version number (eg. v0.0.2)?
      private: false

    - name: deployment_stage
      prompt: What is the deployment stage (eg. dev)?
      private: false

    - name: deployment_product
      prompt: What is the deployment product (eg. product1)?
      private: false

    - name: deployment_build_version
      prompt: What is the deployment product (eg. 6001)?
      private: false

    - name: releaser_name
      prompt: What is your name?
      private: false

    - name: releaser_email
      prompt: What is your email?
      private: false

    - name: approver_name
      prompt: Who approved this release (someone other than you)?
      private: false

    - name: approver_email
      prompt: What is the approvers email address?
      private: false

    - name: emergency_contact_name
      prompt: Who is the emergency contact person (not you or the approver)?
      private: false
    
    - name: emergency_contact_number
      prompt: What is the phone number for the emergency contact?
      private: false

    - name: ticket_number
      prompt: What is the ticket number of the approval (eg. TEST001)?
      private: false

  tasks:

  - name: "Sending Release Event to DT"
    ansible.builtin.uri:
      url: "{{ dt_tenant }}/api/v1/events"
      method: POST
      status_code: 200
      body_format: json
      headers:
        Authorization: "Api-token {{dt_api_token}}"
      body: >-
        {
          "eventType": "CUSTOM_DEPLOYMENT",
          "timeout": 5,
          "attachRules": {
            "tagRule": [{
              "meTypes": [ "HOST", "PROCESS_GROUP_INSTANCE" ],
              "tags": [{
                "context": "CONTEXTLESS",
                "key": "at-host-group",
                "value": "at-demo-release"
              }, {
                "context": "CONTEXTLESS",
                "key": "at-pg-tag",
                "value": "webserver"
              }]
            }]
          },
          "source": "Ansible",
          "deploymentName": "{{ deployment_version}} deployment by {{ releaser_name}}",
          "deploymentVersion": "{{ deployment_version  }}",
          "customProperties": {
            "deployment version": "{{ deployment_version  }}",
            "deployment product": "{{ deployment_product }}",
            "deployment build version": "{{ deployment_build_version }}",
            "deployment stage": "{{ deployment_stage }}",
            "operator": "{{ releaser_name }}",
            "operator email": "{{ releaser_email }}",
            "approver": "{{ approver_name }}",
            "approver email": "{{ approver_email }}",
            "escalation contact": "{{ emergency_contact_name }}",
            "escalation contact number": "{{ emergency_contact_number }}",
            "ticket number": "{{ ticket_number }}",
            "ticket link": "https://myTicketSystem.com/{{ticket_number}}"
          }
        }

  - name: Set new DT_RELEASE_VERSION envvar
    ansible.builtin.replace:
      path: "/etc/apache2/envvars"
      regexp: "export DT_RELEASE_VERSION=.+"
      replace: "export DT_RELEASE_VERSION={{ deployment_version }}"

  - name: Set new DT_RELEASE_STAGE envvar
    ansible.builtin.replace:
      path: "/etc/apache2/envvars"
      regexp: "export DT_RELEASE_STAGE=.+"
      replace: "export DT_RELEASE_STAGE={{ deployment_stage }}"

  - name: Set new DT_RELEASE_PRODUCT envvar
    ansible.builtin.replace:
      path: "/etc/apache2/envvars"
      regexp: "export DT_RELEASE_PRODUCT=.+"
      replace: "export DT_RELEASE_PRODUCT={{ deployment_product }}"

  - name: Set new DT_RELEASE_BUILD_VERSION envvar
    ansible.builtin.replace:
      path: "/etc/apache2/envvars"
      regexp: "export DT_RELEASE_BUILD_VERSION=.+"
      replace: "export DT_RELEASE_BUILD_VERSION={{ deployment_build_version }}"

  - name: Restart Apache
    ansible.builtin.service:
      name: apache2
      state: restarted